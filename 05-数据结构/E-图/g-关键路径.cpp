/**
 * @file g-关键路径.cpp
 * @author Qin Hao (qinhao2020@foxmail.com)
 * @brief 
 * @version 0.1
 * @date 2021-02-20
 * 
 * @copyright Copyright (c) 2021 Qin Hao
 * 
 */

// ------ 1. AOV 网和 AOE 网 ------

// 顶点活动（Activity On Vertex，AOV）网是指用顶点表示活动，而用边集表示活动间优先关系的有向图。

// 考虑到对工程来说总会有一个起始时刻和结束时刻，因此 AOV 网一般只有一个源点和一个汇点。
// 实际上即便有多个源点和多个汇点，仍然可以转换为一个源点和一个汇点的情况，也就是添加一个
// “超级源点”和一个“超级汇点”的方法，
// 即从超级源点出发连接所有入度为 0 的点，从所有出度为 0 的点出发连接超级汇点。

// 如果给定 AOV 网中各项活动所需要的时间，那么就可以将 AOV 网转换为 AOE 网。
// 比较简单的方法是：将 AOV 网中的每个顶点都拆成两个顶点，分别表示活动的起点和终点，而两个顶点之间
// 用有向边连接，该有向边表示原顶点的活动，边权给定；原 AOV 网中的边全部视为空活动，边权为 0.

// -----------------------------------------------------------------------------

// 边活动（Activity On Edge，AOE）网是指用带权的边集表示活动，而用顶点表示事件的有向图，
// 其中边权表示完成活动需要的时间。

// 一般来说，AOE 网用来表示一个工程的进行过程，而工程常常可以分为若干个子工程（即“活动”），
// 显然 AOE 网不应当有环，否则会出现和 AOV 网一样的逻辑问题（因此可以认为 AOV 网和 AOE 网都
// 是有向无环图）。

// AOE 网着重解决的是两个问题：
// 1. 工程起始到终止至少需要多少时间
// 2. 哪条路径上的活动是影响整个工程进度的关键

// AOE 网中的最长路径被称为“关键路径”，而把关键路径上的活动称为关键活动，
// 显然关键活动会影响整个工程的进度。其长度等于整个工程的最短完成时间。

// ------ 2. 最长路径 ------

// 对一个没有正环的图，如果需要求最长路径长度，可以把所有边的边权乘以 -1，令其变为相反数，
// 然后使用 Bellman-Ford 算法或 SPFA 算法求最短路径长度，将所得结果取反即可。

// 如果图中有正环，那么最长路径不存在。
// 求解最长简单路径（每个顶点最多只经过一次的路径）长度也是不行的，因为虽然本身存在，但是个 NP-Hard 问题。

// ------ 3. 关键路径 ------

// 求解有向无环图中最长路径的方法

// 关键活动是那些不允许拖延的活动，所以最晚开始时间是最早开始时间。
// 因此可以设置数组 e 和 l，其中 e[r] 和 l[r] 分别表示活动 a_r 的最早开始时间和最晚开始时间。
// 于是，求出这两个数组后就可以根据 e[r] == l[r] 是否成立判断活动是否是关键活动。

// TODO 太复杂，更简单的方法见 02-算法\I-动态规划\f-DAG 最长路.cpp