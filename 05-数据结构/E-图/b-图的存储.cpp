/**
 * @file b-图的存储.cpp
 * @author Qin Hao (qinhao2020@foxmail.com)
 * @brief 
 * @version 0.1
 * @date 2021-02-10
 * 
 * @copyright Copyright (c) 2021 Qin Hao
 * 
 */

// ------ 1. 邻接矩阵 ------
// 设图 G(V, E) 的顶点标号为 0,1,..,N-1，那么可令二维数组 G[N][N] 的两维分别表示图的顶点标号
// 如果 G[i][j]==1 说明顶点 i 和 j 之间有边，为 0 则无边。这个矩阵就叫邻接矩阵。

// 如存在边权，可令其相应的存放边权。

// 对无向图来说，邻接矩阵是一个对称矩阵。

// 由于使用的内存空间比较大，因此一般适用于顶点数不超过 1000 的题目。

// ------ 2. 邻接表 ------
// 设图 G(V, E) 的顶点编号为 0，1，。。。，N-1，每个顶点都可能有若干条出边，如果把同一个顶点的所有出边
// 放在一个列表中，那么 N 个顶点就会有 N 个列表，这 N 个列表被称为图 G 的邻接表。
vector<Node> Adj[N];

struct Node
{
    int v; // 边的中点编号
    int w; // 边权
    Node(int _v, int _w) : v(_v), w(_w) {} // 构造函数
};

// 一般顶点个数在 1000 以上的情况下需要使用邻接表存储图。
