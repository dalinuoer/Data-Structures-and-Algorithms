/*
* 字符串hash初步
* Author: Qin Hao
* Date: 2020/5/1
*/

// 一个例子：如何将一个二维整点 P 的坐标映射为一个整数，使得整点 P 可以由该整数唯一的代表？
// 假设坐标 P 为（x， y），其中0 <= x, y <= Range，那么可以令hash函数为H（P）= x * Range + y。

// 字符串hash是指将一个字符串 S 映射成为一个整数，使得该整数可以尽可能地代表字符串 S
// 本节只讨论将字符串转换为唯一的整数

// 1. 先假设字符串均由大写字母 A -- Z 构成
// 不妨把 A -- Z 视为 0 -- 25，这样就把26个大写字母对应到了二十六进制中；
// 接着，把二十六进制转换为十进制，即可。
int hashFunc(char s[], int len)
{
    int id = 0;
    for (int i = 0; i < len; i++)
    {
        id = id * 26 + (s[i] - 'A');
    }
    return id;
}
// 若len过长，则转换出来的整数就会很大，所以应该控制字符串的长度

// 2. 除了大写字母外还有小写字母
// 不妨把 A -- Z 视为 0 -- 25，把 a -- z 视为 26 -- 51，这样就把52个字母对应到了五十二进制中；
// 接着，把五十二进制转换为十进制，即可。
int hashFunc(char s[], int len)
{
    int id = 0;
    for (int i = 0; i < len; i++)
    {
        if (s[i] >= 'A' && s[i] <= 'Z')
        {
            id = id * 52 + (s[i] - 'A');
        }
        else if (s[i] >= 'a' && s[i] <= 'z')
        {
            id = id * 52 + ((s[i] - 'a') + 26);
        }
    }
    return id;
}
// 3. 若出现了数字
// 3.1. 按照小写字母处理方式，增大进制到62；
// 3.2. 如果保证在字符串的末尾是确定个数的数字，那么可以把前面的英文字母的部分按上面的思路转换成整数，
//      再将末尾的数字直接拼接上去。